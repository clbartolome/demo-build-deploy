apiVersion: batch/v1
kind: Job
metadata:
  generateName: gitea-setup-
  name: configure-gitea
  namespace: gitea
  annotations:
    argocd.argoproj.io/sync-wave: "29"
  labels:
      app.kubernetes.io/part-of: gitea
      name: configure-gitea
spec:
  backoffLimit: 1
  template:
    spec:
      containers:
      - name: git
        image: quay.io/calopezb/git-utils:1.0.0
        #Â TODO: Read CONFIGURATION using a configmap + ansible
        env:
        - name: GITEA_HOSTNAME
          value: "gitea.gitea.svc.cluster.local:3000"
        command:
        - /bin/sh
        - '-c'
        args:
        - |-
          pwd
          mkdir repository
          cd repository

          echo "-- Cloning demo repository --"
          git clone -b master https://github.com/clbartolome/demo-build-deploy.git  
          echo "------------------------------"   

          echo "-- Creating gitea user --"
          curl -X POST \
            -d '{"username":"gitea","password":"openshift","retype":"openshift","email":"gitea@gitea.com","send_notify":false}' \
            -H "Content-Type: application/json" \
            http://$GITEA_HOSTNAME/user/sign_up
          echo "------------------------------"   

          echo "-- Creating cicd-aide user as admin --"
          RESPONSE=$(curl -o /dev/null -s -w "%{http_code}\n" -X POST \
            -u gitea:openshift \
            -d '{"email":"cicd-aide@example.com","full_name": "cicd-aide","login_name": "cicd-aide","must_change_password": false,"password": "cicd-aide","restricted": true,"send_notify": false,"username": "cicd-aide"}' \
            -H "Content-Type: application/json" \
            http://$GITEA_HOSTNAME/api/v1/admin/users)

          if [ "$RESPONSE" != "201" ]; then
              echo "Error creating cicd aide user, error code: $RESPONSE"
              exit 1
          fi

          RESPONSE=$(curl -o /dev/null -s -w "%{http_code}\n" -X PATCH \
            -u gitea:openshift \
            -d '{"admin": true,"login_name": "cicd-aide"}' \
            -H "Content-Type: application/json" \
            http://$GITEA_HOSTNAME/api/v1/admin/users/cicd-aide)

          if [ "$RESPONSE" != "200" ]; then
              echo "Error making cicd aide admin, error code: $RESPONSE"
              exit 1
          fi
          echo "------------------------------"   

          echo "-- Creating weather-app repository --"
          RESPONSE=$(curl -o /dev/null -s -w "%{http_code}\n" -X POST \
            -u gitea:openshift \
            -d '{"auto_init": true,"default_branch": "master","gitignores": "VisualStudioCode","name": "weather-app","private": false,"trust_model": "default"}' \
            -H "Content-Type: application/json" \
            http://$GITEA_HOSTNAME/api/v1/user/repos)

          if [ "$RESPONSE" != "201" ]; then
              echo "Error creating repository, error code: $RESPONSE"
              exit 1
          fi

          git clone http://gitea:openshift@$GITEA_HOSTNAME/gitea/weather-app
          cp -r demo-build-deploy/weather-app/. weather-app
          cd weather-app
          git config user.email "gitea@gitea.com"
          git config user.name "gitea"
          git add . && git commit -m "Repository cloned from demo source" && git push
          cd ..
          echo "------------------------------"   
          
          echo "-- Creating weather-deploy repository --"
          RESPONSE=$(curl -o /dev/null -s -w "%{http_code}\n" -X POST \
            -u gitea:openshift \
            -d '{"auto_init": true,"default_branch": "master","gitignores": "VisualStudioCode","name": "weather-deploy","private": false,"trust_model": "default"}' \
            -H "Content-Type: application/json" \
            http://$GITEA_HOSTNAME/api/v1/user/repos)

          if [ "$RESPONSE" != "201" ]; then
              echo "Error creating repository, error code: $RESPONSE"
              exit 1
          fi

          echo "------------------------------"   


          
        imagePullPolicy: Always
      restartPolicy: Never